{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInWithGoogleSuccess, signInWithGoogleFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n    yield put(signInWithGoogleSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInWithGoogleFailure(error));\n  }\n}\nexport function* signInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n  } catch (error) {\n    yield console.log(error);\n  }\n}\nexport function* signInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(signInWithGoogleStart), call(signInWithEmailStart)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/lesson-26-complete/src/redux/user/user.saga.js"],"names":["all","put","takeLatest","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogleSuccess","signInWithGoogleFailure","signInWithGoogle","user","signInWithPopup","userRef","snapshot","get","id","data","error","signInWithGoogleStart","SIGN_IN_WITH_GOOGLE_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","signInWithEmailStart","SIGN_IN_WITH_EMAIL_START","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMd,GAAG,CAACO,uBAAuB,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,SAAGF,QAAQ,CAACG,IAAT;AAAtB,KAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACQ,uBAAuB,CAACS,KAAD,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CAACE,eAAe,CAACgB,yBAAjB,EAA4CV,gBAA5C,CAAhB;AACD;AAED,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACd,UAAMQ,OAAO,CAACC,GAAR,CAAYT,KAAZ,CAAN;AACD;AACF;AACD,OAAO,UAAUU,oBAAV,GAAiC;AACtC,QAAM1B,UAAU,CAACE,eAAe,CAACyB,wBAAjB,EAA2CR,eAA3C,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAM9B,GAAG,CAAC,CAACG,IAAI,CAACgB,qBAAD,CAAL,EAA8BhB,IAAI,CAACyB,oBAAD,CAAlC,CAAD,CAAT;AACD","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"../user/user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  signInWithGoogleSuccess,\n  signInWithGoogleFailure,\n} from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n    yield put(signInWithGoogleSuccess({ id: snapshot.id, ...snapshot.data() }));\n  } catch (error) {\n    yield put(signInWithGoogleFailure(error));\n  }\n}\n\nexport function* signInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n  } catch (error) {\n    yield console.log(error);\n  }\n}\nexport function* signInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\n\nexport function* userSaga() {\n  yield all([call(signInWithGoogleStart), call(signInWithEmailStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}