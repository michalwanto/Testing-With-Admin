{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* onSignInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* onSignInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\nexport function* onCheckCurrentUser() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\nexport function* on() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\nexport function* userSaga() {\n  yield all([call(signInWithGoogleStart), call(signInWithEmailStart), call(checkCurrentUser)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/lesson-26-complete/src/redux/user/user.saga.js"],"names":["all","put","takeLatest","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onSignInWithGoogleStart","SIGN_IN_WITH_GOOGLE_START","onSignInWithEmailStart","SIGN_IN_WITH_EMAIL_START","onCheckCurrentUser","CHECK_CURRENT_USER","on","userSaga","signInWithGoogleStart","signInWithEmailStart","checkCurrentUser"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,+BALP;AAOA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,gBALP;AAOA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,QAA5B,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMhB,GAAG,CAACQ,aAAa,CAAC;AAAES,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,SAAGF,QAAQ,CAACG,IAAT;AAAtB,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMP,QAAQ,GAAG,MAAMN,cAAc,EAArC;;AACA,QAAI,CAACM,QAAL,EAAe;AACb;AACD;;AACD,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAND,CAME,OAAOM,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUE,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,IAAI,CAACmB,eAAL,CAAqBlB,cAArB,CAAvB;AACA,UAAMO,uBAAuB,CAACU,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUK,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMlB,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,aAAD,CAAT;AACD;AACF;AACD,OAAO,UAAUoB,uBAAV,GAAoC;AACzC,QAAM5B,UAAU,CAACE,eAAe,CAAC2B,yBAAjB,EAA4CT,gBAA5C,CAAhB;AACD;AACD,OAAO,UAAUU,sBAAV,GAAmC;AACxC,QAAM9B,UAAU,CAACE,eAAe,CAAC6B,wBAAjB,EAA2CR,eAA3C,CAAhB;AACD;AACD,OAAO,UAAUS,kBAAV,GAA+B;AACpC,QAAMhC,UAAU,CAACE,eAAe,CAAC+B,kBAAjB,EAAqCd,mBAArC,CAAhB;AACD;AACD,OAAO,UAAUe,EAAV,GAAe;AACpB,QAAMlC,UAAU,CAACE,eAAe,CAAC+B,kBAAjB,EAAqCd,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUgB,QAAV,GAAqB;AAC1B,QAAMrC,GAAG,CAAC,CACRG,IAAI,CAACmC,qBAAD,CADI,EAERnC,IAAI,CAACoC,oBAAD,CAFI,EAGRpC,IAAI,CAACqC,gBAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"../user/user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n} from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* onSignInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* onSignInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\nexport function* onCheckCurrentUser() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\nexport function* on() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\n\nexport function* userSaga() {\n  yield all([\n    call(signInWithGoogleStart),\n    call(signInWithEmailStart),\n    call(checkCurrentUser),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}