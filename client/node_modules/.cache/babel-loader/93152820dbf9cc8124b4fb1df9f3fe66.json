{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const snapshot = yield userRef.get();\n    yield console.log(snapshot.data);\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure());\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* onSignInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\nexport function* onCheckCurrentUser() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onSignInWithGoogleStart), call(onSignInWithEmailStart), call(onCheckCurrentUser), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/lesson-26-complete/client/src/redux/user/user.sagas.js"],"names":["all","put","takeLatest","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","snapshot","get","console","log","data","id","error","signOut","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignInWithGoogleStart","SIGN_IN_WITH_GOOGLE_START","onSignInWithEmailStart","SIGN_IN_WITH_EMAIL_START","onCheckCurrentUser","CHECK_CURRENT_USER","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const snapshot = yield userRef.get();\n    yield console.log(snapshot.data);\n    yield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure());\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onSignInWithGoogleStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* onSignInWithEmailStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\nexport function* onCheckCurrentUser() {\n  yield takeLatest(UserActionTypes.CHECK_CURRENT_USER, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onSignInWithGoogleStart),\n    call(onSignInWithEmailStart),\n    call(onCheckCurrentUser),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}